[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
name = "{{ python_package_distribution_name }}"
version = "0.1.0"
description = "{{ project_description }}"
authors = ["{{ author_fullname }} <{{ author_email }}>"]
license = "{{ copyright_license }}"
readme = "README.md"
repository = "https://{{ repository_provider }}/{{ repository_namespace }}/{{ repository_name }}"
homepage = "https://{{ repository_provider }}/{{ repository_namespace }}/{{ repository_name }}"
documentation = "https://{{ repository_namespace }}.{{ repository_provider }}.io/{{ repository_name }}/"
keywords = []
packages = [ { include = "{{ python_package_import_name }}", from = "src" } ]

[tool.poetry.dependencies]
{%- set python_versions_dict = [] %}
{%- for version_str in python_versions.split(' ') %}
{%-     set _ = python_versions_dict.append({"major" : version_str.split('.')[0]|int, "minor": version_str.split('.')[1]|int}) %}
{%- endfor%}
{%- set smallest_python_version = python_versions_dict|sort(attribute='major,minor')|first %}
{%- set smallest_python_version_str = ["{}".format(smallest_python_version["major"]), "{}".format(smallest_python_version["minor"])] %}
python = ">={{ smallest_python_version_str|join('.') }}"

[tool.poetry.dev-dependencies]
# formatting, quality, tests
autoflake = ">=1.4"
black = "*"
isort = "*"
pytest = "*"
types-toml = ">=0.10.1"

# tasks
duty = ">=0.6.0"
git-changelog = ">=0.5.0"
httpx = ">=0.16.1"
jinja2-cli = ">=0.7.0"
toml = ">=0.10.2"

# flake8 plugins
flake8 = ">=3.7.0"
flake8-bandit = ">=2.1.2"
flake8-black = ">=0.2.1"
flake8-bugbear = ">=20.11.1"
flake8-builtins = ">=1.5.3"
flake8-comprehensions = ">=3.3.1"
flake8-docstrings = ">=1.5.0"
flake8-string-format = ">=0.3.0"
flake8-tidy-imports = ">=4.2.1"
flake8-variables-names = ">=0.0.4"
pep8-naming = ">=0.11.1"
pydocstyle = ">=6.1.1"

# docs
mkdocs = ">=1.2.2"
mkdocs-coverage = ">=0.2.1"
mkdocs-macros-plugin = ">=0.5.0"
mkdocs-material = ">=6.2.7"
mkdocstrings = ">=0.16.2"

[tool.poetry.scripts]
{{ python_package_command_line_name }} = "{{ python_package_import_name }}.cli:main"

[tool.black]
line-length = 127
exclude = "tests/fixtures"

[tool.isort]
line_length = 127
not_skip = "__init__.py"
multi_line_output = 3
force_single_line = false
balanced_wrapping = true
default_section = "THIRDPARTY"
known_first_party = "{{ python_package_import_name }}"
include_trailing_comma = true
